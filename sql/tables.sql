DROP TABLE IF EXISTS ORDR_ITEM;
DROP TABLE IF EXISTS ORDR;
DROP TABLE IF EXISTS ITEM;
DROP TABLE IF EXISTS MAIL;
DROP TABLE IF EXISTS PERSON;
DROP TABLE IF EXISTS DATA_TYPES;
DROP TABLE IF EXISTS TABLE_A_EXTENDED;
DROP TABLE IF EXISTS TABLE_A;
DROP TABLE IF EXISTS MAN;
DROP TABLE IF EXISTS TABLE_B;
DROP TABLE IF EXISTS ARRAYS;
DROP TABLE IF EXISTS INT_INTEGER;

CREATE TABLE PERSON
(
  id SERIAL PRIMARY KEY,
  name VARCHAR(64) NOT NULL,
  surname VARCHAR(64)
);

CREATE TABLE ITEM
(
  id SERIAL PRIMARY KEY,
  name VARCHAR(64) NOT NULL,
  description VARCHAR(256),
  manufacturer VARCHAR(64) NOT NULL,
  price numeric(5,2) NOT NULL
);

CREATE TABLE ORDR
(
  id SERIAL PRIMARY KEY,
  person_id INTEGER NOT NULL,
  placed TIMESTAMP NOT NULL DEFAULT NOW(),
  shipped TIMESTAMP,
  details VARCHAR(256),
  status VARCHAR(64) CHECK (status IN ('new', 'placed', 'inprocess', 'shipped', 'cancelled')),
  FOREIGN KEY (person_id) REFERENCES PERSON (id)
);

CREATE TABLE ORDR_ITEM 
(
  ordr_id INTEGER NOT NULL,
  item_id  INTEGER NOT NULL,
  amount   INTEGER NOT NULL DEFAULT 1,
  FOREIGN KEY (ordr_id) REFERENCES ORDR (id),
  FOREIGN KEY (item_id) REFERENCES ITEM (id),
  PRIMARY KEY (ordr_id, item_id)
);

CREATE TABLE DATA_TYPES
(
  id SERIAL PRIMARY KEY,
  _date DATE,
  _json JSON,
  _money MONEY,
  _char CHAR,
  _int INTEGER,
  _inet INET,
  _boolean BOOLEAN,
  _long BIGINT,
  _float REAL,
  _double DOUBLE PRECISION,
  _text TEXT,
  _uuid UUID
);

CREATE TABLE TABLE_A
(
	id SERIAL PRIMARY KEY,
	type VARCHAR(256),
	name VARCHAR(256)
);

CREATE TABLE TABLE_A_EXTENDED
(
	id INTEGER PRIMARY KEY,
	type VARCHAR(256),
	surname VARCHAR(256),
	FOREIGN KEY ("id") REFERENCES TABLE_A("id")
);

CREATE TABLE TABLE_B
(
  id SERIAL PRIMARY KEY,
  name VARCHAR(256),
  type VARCHAR(256) not null,
  phone VARCHAR(256)
);

CREATE TABLE MAN
(
  id SERIAL PRIMARY KEY,
  name VARCHAR(256),
  surname VARCHAR(256),
  age INTEGER
);

CREATE TABLE MAIL
(
  id SERIAL PRIMARY KEY,
  _from INTEGER,
  _to INTEGER,
  message VARCHAR(256),
  FOREIGN KEY (_from) REFERENCES PERSON(id),
  FOREIGN KEY (_to) REFERENCES PERSON(id)
);

CREATE TABLE ARRAYS
(
  id SERIAL PRIMARY KEY,
  int_array INTEGER[]
);

CREATE TABLE INT_INTEGER
(
  id SERIAL PRIMARY KEY,
  name VARCHAR(256)
);